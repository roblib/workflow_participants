<?php

/**
 * @file
 * Hook implementations for the Automatic Workflow Participants module.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\workflow_participants\Entity\WorkflowParticipants;

/**
 * Implements hook_entity_type_build().
 */
function workflow_participants_auto_entity_type_build(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  $entity_types['workflow']
    ->setFormClass('workflow_participants', 'Drupal\workflow_participants_auto\Form\WorkflowParticipantsForm')
    ->setLinkTemplate('workflow-participants-form', '/admin/config/workflow/workflows/manage/{workflow}/participants');
}

/**
 * Implements hook_entity_insert().
 */
function workflow_participants_auto_entity_insert(EntityInterface $entity) {
  // Add participants automatically if they are configured for the workflow.
  if ($entity instanceof ContentEntityInterface) {
    /** @var Drupal\content_moderation\ModerationInformationInterface $moderation_information */
    $moderation_information = \Drupal::service('content_moderation.moderation_information');
    if ($workflow = $moderation_information->getWorkflowForEntity($entity)) {
      $participants = $workflow->getThirdPartySettings('workflow_participants_auto');
      if (!empty($participants['reviewers']) || !empty($participants['editors'])) {
        WorkflowParticipants::create([
          'moderated_entity' => $entity,
          'reviewers' => isset($participants['reviewers']) ? $participants['reviewers'] : [],
          'editors' => isset($participants['editors']) ? $participants['editors'] : [],
        ])->save();
      }
    }
  }
}
